name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache vcpkg
        uses: actions/cache@v2
        env:
          cache-name: cache-vcpkg-d8b9ae5
        with:
          path: ${{ github.workspace }}/vcpkg
          key: ${{ runner.os }}-vcpkg-${{ env.cache-name }}
          restore-keys: ${{ runner.os }}-vcpkg-${{ env.cache-name }}

      - name: clone and bootstrap vcpkg
        run: |
          IF NOT EXIST "vcpkg" (
              git clone --depth=360 https://github.com/microsoft/vcpkg
              cd "vcpkg"
              git reset --hard d8b9ae5
              .\bootstrap-vcpkg.bat
          )
        shell: cmd

      - name: Install dependencies with vcpkg
        run: |
          cd "%GITHUB_WORKSPACE%\vcpkg"
          IF NOT EXIST "buildtrees\pthreads" (
              .\vcpkg --version
              .\vcpkg install --triplet "%RUNNER_ARCH%-%RUNNER_OS%" pthreads gettext
          )
        shell: cmd

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          cmake -B "%GITHUB_WORKSPACE%\build" -DCMAKE_BUILD_TYPE="%BUILD_TYPE%" -DVCPKG_TARGET_TRIPLET="%RUNNER_ARCH%-%RUNNER_OS%" -DCMAKE_TOOLCHAIN_FILE="vcpkg\scripts\buildsystems\vcpkg.cmake"
        shell: cmd

      - name: Build
        # Build your program with the given configuration
        run: cmake --build "%GITHUB_WORKSPACE%\build" --config "%BUILD_TYPE%"
        shell: cmd

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C "%BUILD_TYPE%"
        shell: cmd
