README.windows
**************

Introduction
============

This file describes the steps required to build fswatch on Windows.  fswatch was
born as a POSIX application and the Windows monitor has been developed trying to
reduce the dependencies on the Windows API at a minimum.

There are two variants to fulfill this goal: Cygwin and Microsoft Visual Studio.

Windows has historically provided multiple versions of the same API for single
byte and multibyte character sets.  We have decided to only support the
multibyte API: the Windows monitor will thus not build on Windows system
supporting only the single-byte APIs.  In this case, the only available monitor
on the Windows OS will be the poll monitor.

Microsoft Visual Studio (MSVC)
==============================

The MSVC variant is configured through CMake and is fully native on Windows.

The three dependencies to get it working are:

   0. CMake: https://cmake.org
   1. pthreads: https://sourceforge.net/projects/pthreads4w
   2. gettext: https://mlocati.github.io/articles/gettext-iconv-windows.html

The pthreads and gettext dependencies are most easily acquirable through use
of a package manager, like Microsoft's open-source cross-platform vcpkg

    git clone --depth=1 "https://github.com/microsoft/vcpkg"
    cd "vcpkg"
    :: Replace "[dir]" in later command with this dir
    .\bootstrap-vcpkg.bat
    .\vcpkg install --triplet "x64-windows" "pthreads" "gettext"

Then the project can be configured and compiled & built with:

    cd <fswatch_directory>
    cmake -B "build" \
          -DCMAKE_BUILD_TYPE="Debug" \
          -DVCPKG_TARGET_TRIPLET="x64-windows" \
          -DCMAKE_TOOLCHAIN_FILE="[dir]\vcpkg\scripts\buildsystems\vcpkg.cmake"
    cmake --build "build" --config "Debug"

[everything that follows is only applicable to Cygwin]

Cygwin
======

Cygwin is a required dependency and must be installed to provide the toolchain
and the libraries required by fswatch.  The current Cygwin distribution can be
downloaded at:

    https://cygwin.com

Cygwin is a modular environment and the following componentes are required to
successfully build fswatch:

  * GNU GCC C++ compiler.

  * GNU Autoconf.

  * GNU Automake.

  * GNU Autoconf.

  * GNU libtool.

The following are optional:

  * GNU gettext (optional)

Windows SDK
===========

The Windows SDK is required to successfully build fswatch since it ships the
headers and the libraries required to build Windows applications.  Please,
consult your Windows documentation to get the latest SDK for your platform.

GNU Build System
================

For further instruction on building the GNU Build System from scratch, please
check the README.gnu-build-system file.

Localization and gettext
========================

fswatch is localizable and locale support requires GNU gettext to be available
at build time.

Depending on gettext installation path, configure may not be able to find
<libintl.h> or libintl.  In this case, you will need to instruct configure about
their location:

  $ CPPFLAGS="-I/path/to/include" LDFLAGS="-L/path/to/lib" ./configure

If configure detects that gettext is available, you will find a message such as:

  checking whether to use NLS... yes

or, which is equivalent, config.h will contain the following definition:

  #define ENABLE_NLS 1

-----

Copyright (c) 2014-2015 Enrico M. Crisostomo

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see <http://www.gnu.org/licenses/>.
